// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremiumCalculator.DbContexts;

namespace PremiumCalculator.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20210125103221_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PremiumCalculator.Entities.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Occupations");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Name = "Cleaner"
                        },
                        new
                        {
                            Id = 10002,
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = 10003,
                            Name = "Author"
                        },
                        new
                        {
                            Id = 10004,
                            Name = "Farmer"
                        },
                        new
                        {
                            Id = 10005,
                            Name = "Mechanic"
                        },
                        new
                        {
                            Id = 10006,
                            Name = "Florist"
                        });
                });

            modelBuilder.Entity("PremiumCalculator.Entities.OccupationRating", b =>
                {
                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.HasKey("OccupationId", "RatingId");

                    b.HasIndex("OccupationId")
                        .IsUnique();

                    b.HasIndex("RatingId");

                    b.ToTable("OccupationRatings");

                    b.HasData(
                        new
                        {
                            OccupationId = 10001,
                            RatingId = 20003
                        },
                        new
                        {
                            OccupationId = 10002,
                            RatingId = 20001
                        },
                        new
                        {
                            OccupationId = 10003,
                            RatingId = 20002
                        },
                        new
                        {
                            OccupationId = 10004,
                            RatingId = 20004
                        },
                        new
                        {
                            OccupationId = 10005,
                            RatingId = 20004
                        },
                        new
                        {
                            OccupationId = 10006,
                            RatingId = 20003
                        });
                });

            modelBuilder.Entity("PremiumCalculator.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Factor")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 20001,
                            Factor = 1.0,
                            Name = "Professional"
                        },
                        new
                        {
                            Id = 20002,
                            Factor = 1.25,
                            Name = "White Collar"
                        },
                        new
                        {
                            Id = 20003,
                            Factor = 1.5,
                            Name = "Light Manual"
                        },
                        new
                        {
                            Id = 20004,
                            Factor = 1.75,
                            Name = "Heavy Manual"
                        });
                });

            modelBuilder.Entity("PremiumCalculator.Entities.OccupationRating", b =>
                {
                    b.HasOne("PremiumCalculator.Entities.Occupation", "Occupation")
                        .WithOne("OccupationRatings")
                        .HasForeignKey("PremiumCalculator.Entities.OccupationRating", "OccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremiumCalculator.Entities.Rating", "Rating")
                        .WithMany("OccupationRatings")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occupation");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("PremiumCalculator.Entities.Occupation", b =>
                {
                    b.Navigation("OccupationRatings");
                });

            modelBuilder.Entity("PremiumCalculator.Entities.Rating", b =>
                {
                    b.Navigation("OccupationRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
