{"version":3,"sources":["./ClientApp/environments/environment.prod.ts","./ClientApp/environments/environment.ts","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/app-routing.module.ts","./ClientApp/main.ts","./ClientApp/app/calculator/http-service.ts","./ClientApp/app/calculator/monthly-premium.component.ts","./ClientApp/app/calculator/monthly-premium.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export const environment = {\n    production: true,\n    baseUrl: 'http://localhost:5000/api/resource/ratingfactor'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    baseUrl: 'http://localhost:5000/api/resource/ratingfactor'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TAL Insurance Premium Calculator';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MonthlyPremiumComponent } from './calculator/monthly-premium.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonthlyPremiumComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [MonthlyPremiumComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment.prod';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    get<T>(): Observable<T> {\r\n        return this.http.get<T>(environment.baseUrl)\r\n            .pipe(\r\n                tap(data => console.log(JSON.stringify(data))),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(err): Observable<never> {\r\n        let errorMessage: string;\r\n        if (err.error instanceof ErrorEvent) {\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n        }\r\n        console.error(err);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { CalculatorInput } from '../model/calculator-input';\nimport { OccupationFactor } from '../model/occupation-factor';\nimport { HttpService } from './http-service';\n\n@Component({\n    selector: 'app-monthly-premium',\n    templateUrl: './monthly-premium.component.html',\n    styleUrls: ['./monthly-premium.component.css']\n})\nexport class MonthlyPremiumComponent implements OnInit {\n    pageTitle = 'Premium Calculator';\n    errorMessage = '';\n\n    premiumCalculatorForm: FormGroup;\n    submitted = false;\n    premiumAmount: number\n    occupationRatingFactorList: OccupationFactor[] = []\n\n    constructor(private formBuilder: FormBuilder,\n        private httpService: HttpService) { }\n\n    ngOnInit() {\n        this.premiumCalculatorForm = this.formBuilder.group({\n            fullName: [''],\n            dob: ['', Validators.required],\n            age: [''],\n            occupation: ['', Validators.required],\n            sumInsured: ['', [Validators.required, Validators.min(1)]]\n        });\n        this.getRatingFactorByOccupation();\n    }\n\n    get f() { return this.premiumCalculatorForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.premiumCalculatorForm.valid) {\n            this.calculatePremium()\n        }\n    }\n\n    onDateOfBirthChange(dateofBirth: string): void {\n        if (dateofBirth) {\n            let dateRange = new Date(dateofBirth);\n            let minDate = new Date('1900-01-01')\n            let maxDate = new Date('2021-02-01')\n\n            if (dateRange > minDate && dateRange < maxDate) {\n                let age = this.getAgeFromDateOfBirth(dateofBirth)\n                this.premiumCalculatorForm.patchValue({ age: age })\n            }\n            else {\n                this.premiumCalculatorForm.patchValue({ dob: null })\n                this.premiumCalculatorForm.patchValue({ age: null })\n            }\n        }\n    }\n\n    calculatePremium(): void {\n        if (this.premiumCalculatorForm.valid) {\n            let dateOfBirth = this.premiumCalculatorForm.get('dob').value;\n            let occupation = this.premiumCalculatorForm.get('occupation').value;\n            let deathSumInsured = this.premiumCalculatorForm.get('sumInsured').value;\n\n            if (dateOfBirth && occupation && deathSumInsured) {\n                let InsurancePremiumParams = {} as CalculatorInput;\n                let dateofBirth = this.premiumCalculatorForm.get('dob').value\n                InsurancePremiumParams.age = +this.getAgeFromDateOfBirth(dateofBirth)\n                InsurancePremiumParams.occupationRatingFactor = +this.premiumCalculatorForm.get('occupation').value\n                InsurancePremiumParams.deathSumInsured = +this.premiumCalculatorForm.get('sumInsured').value\n\n                this.premiumAmount = this.getMonthlyPremium(InsurancePremiumParams)\n            }\n            else\n                this.premiumAmount = null\n        }\n    }\n\n    getAgeFromDateOfBirth(dob: string): number {\n        var now = new Date();\n        var birthDate = new Date(dob);\n        var timeDiff = Math.abs(now.getTime() - birthDate.getTime());\n        var age = parseFloat((timeDiff / (1000 * 3600 * 24 * 365)).toFixed(2));\n        return age;\n    }\n\n    getMonthlyPremium(insurancePremiumParams: CalculatorInput): number {\n        const monthlyPremium: number = parseFloat(((insurancePremiumParams.deathSumInsured *\n            insurancePremiumParams.occupationRatingFactor * insurancePremiumParams.age) / (1000 * 12)).toFixed(2));\n        return monthlyPremium;\n    }\n\n    getRatingFactorByOccupation(): void {\n        this.httpService.get<OccupationFactor[]>()\n            .subscribe((data: OccupationFactor[]) => {\n                this.occupationRatingFactorList = data\n            });\n    }\n}\n","<div class=\"container w-50 p-3\">\r\n    <div class=\"form-group row\">\r\n        <div>\r\n            <b>Monthly Premium Amount Calculator</b>\r\n            <hr>\r\n            <div class=\"col\" *ngIf=\"premiumAmount > 0\">\r\n                <b>\r\n                    Calculated Premium\r\n                    {{premiumAmount |currency:'AUD':'symbol'}}\r\n                </b>\r\n            </div>\r\n\r\n            <form [formGroup]=\"premiumCalculatorForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"form-group row\">\r\n                    <label for=\"description\" class=\"col-sm-5 col-form-label\">\r\n                        Name\r\n                    </label>\r\n                    <div class=\"col-sm-7\">\r\n                        <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"description\" class=\"col-sm-5 col-form-label\">\r\n                        Date of Birth\r\n                    </label>\r\n                    <div class=\"col-sm-7\">\r\n                        <input type=\"date\" formControlName=\"dob\" class=\"form-control\"\r\n                               min=\"1900-01-01\" max=\"2021-12-31\"\r\n                               (blur)=\"onDateOfBirthChange($event.target.valueAsDate)\"\r\n                               [ngClass]=\"{ 'is-invalid': submitted && f.dob.errors }\" />\r\n                        <div *ngIf=\"submitted && f.dob.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.dob.errors.required\">Date of birth is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"description\" class=\"col-sm-5 col-form-label\">\r\n                        Age\r\n                    </label>\r\n                    <div class=\"col-sm-7\">\r\n                        <input type=\"number\" formControlName=\"age\" class=\"form-control\" readonly />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"description\" class=\"col-sm-5 col-form-label\">\r\n                        Occupation\r\n                    </label>\r\n                    <div class=\"col-sm-7\">\r\n                        <select formControlName=\"occupation\" class=\"form-control\" (change)=\"calculatePremium()\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && f.occupation.errors }\">\r\n                            <option [ngValue]=\"null\" disabled>Select Occupation</option>\r\n                            <option *ngFor=\"let occupation of occupationRatingFactorList\" [value]=\"occupation.factor\">\r\n                                {{occupation.name}}\r\n                            </option>\r\n                        </select>\r\n                        <div *ngIf=\"submitted && f.occupation.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.occupation.errors.required\">Occupation is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"description\" class=\"col-sm-5 col-form-label\">\r\n                        Sum Insured\r\n                    </label>\r\n                    <div class=\"col-sm-7\">\r\n                        <input type=\"number\" formControlName=\"sumInsured\" class=\"form-control\"\r\n                               [ngClass]=\"{ 'is-invalid': submitted && f.sumInsured.errors }\" />\r\n                        <div *ngIf=\"submitted && f.sumInsured.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.sumInsured.errors.required\">Sum Insured is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-5\"></div>\r\n                    <div class=\"col-sm-7\">\r\n                        <button class=\"btn btn-success btn-md\">\r\n                            Calculate Premium\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}